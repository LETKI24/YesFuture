<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<!DOCTYPE html>
<html>
<head>
<!-- jquery 라이브러리 import -->
<script src="https://code.jquery.com/jquery-3.7.1.js">
</script>

<style type="text/css">
	    /* 경계선 스타일 */
	    .divider {
	        border: none;
	        border-top: 1px solid #000; /* 얇은 검은색 선 */
	        margin: 0;
	    }
	        
	    /* 메뉴바 스타일 */
	    .menu-bar {
	        display: flex; /* Flexbox 적용 */
	        justify-content: flex-start; /* 왼쪽부터 가로로 배치 */
	        align-items: center; /* 세로 중앙 정렬 */
	        padding: 10px 20px; /* 메뉴바 안쪽 여백 */
	    }
        
        /* 좌측 버튼 스타일 */
		.group1 {
		    display: flex;
		}
		
		/* 우측 버튼 그룹 스타일 */
		.group2 {
		    display: flex;
		    margin-left: auto; /* 우측으로 밀어붙임 */
		}
		
		        /* 버튼 사이의 간격 설정 */
        .menu-bar a {
            margin-right: 20px; /* 각 버튼 사이의 간격 (원하는 값으로 조정 가능) */
            text-decoration: none; /* 링크 밑줄 제거 */
        }

        /* 버튼 스타일 (옵션) */
        input[type="button"] {
            font-size: 16px;
            padding: 10px 20px;
            background-color: #4CAF50;
            color: white;
            border: none;
            cursor: pointer;
        }
        
        /* 특정 value (닉네임 버튼)에 스타일 적용 */
    	input[type="button"][value="${sessionScope.memberNickname}"] {
        background-color: transparent; /* 배경을 투명하게 설정 */
        color: #4CAF50; /* 글자 색상 설정 */
        border: 1px solid #4CAF50; /* 선택사항: 테두리 추가 */
    	}
    	
        /* 버튼에 마우스를 올렸을 때 스타일 (옵션) */
        input[type="button"]:hover {
            background-color: #45a049;
        }
        
        /* 전체 레이아웃 */
        .container {
            height: 80vh; /* 화면 높이의 80%를 사용 */
        }
        			
		table, th, td {
			border-style: solid;
			border-width: 1px;
			text-align: center;
		}
		
		ul {
			list-style-type: none;
			text-align: center;
		}
		
		li {
			display: inline-block;
		}
</style>

<meta charset="UTF-8">
<title>${boardQuestionVO.boardQuestionTitle }</title>
</head>
<body>
	<h1>질문 게시판</h1>
		
	<div class="menu-bar">
        <!-- 이 위치에 main으로 가는 버튼 만들기 -->
        <a href="problemMain" class="group1"><input type="button" value="문제은행 가기"></a>
        <a href="boardMain" class="group1"><input type="button" value="게시판"></a>
	
		<div class="group2">
			<c:if test="${empty sessionScope.memberEmail }">
			<!-- 회원 가입 버튼 -->
		    <a href="agree"><input type="button" value="${boardQuestionVO.boardQuestionId}"></a>
		    <!-- 로그인 버튼 -->
		    <a href="login"><input type="button" value="로그인"></a>
			</c:if>
			
			<c:if test="${not empty sessionScope.memberEmail }">
			<a href="mypage"><input type="button" value="${sessionScope.memberNickname}"></a>
			<a href="../board/logout"><input type="button" value="로그아웃"></a>
			</c:if>
		</div>
	</div>
	
	<!-- 가로 경계선 -->
    <hr class="divider">
    
    	<!-- 메인 레이아웃 -->
    <div class="container">
	    <div>
			<p>${boardQuestionVO.boardQuestionTitle }</p>
		</div>
		<div>
			<p>작성자 : ${boardQuestionVO.memberNickname }</p>
			<!-- boardDateCreated 데이터 포멧 변경 -->
			<fmt:formatDate value="${boardQuestionVO.boardQuestionDateCreated }"
						pattern="yyyy-MM-dd HH:mm:ss" var="boardQuestionDateCreated"/>
			<p>작성일 : ${boardQuestionDateCreated }</p>
		</div>
		<div>
			<textarea rows="20" cols="120" readonly>${boardQuestionVO.boardQuestionContent }</textarea>
		</div>
		
		<button onclick="location.href='boardQuestion'">글 목록</button>
		<c:if test="${sessionScope.memberNickname eq boardQuestionVO.memberNickname }">
		<button onclick="location.href='modifyQuestion?boardQuestionId=${boardQuestionVO.boardQuestionId}'">글 수정</button>
		<button id="deleteBoard">글 삭제</button>
		<form id="deleteForm" action="deleteQuestion" method="POST">
			<input type="hidden" name="boardQuestionId" value="${boardQuestionVO.boardQuestionId }">
		</form>
		</c:if>
	</div>
	
	<div style="text-align: center;">
		<input type="text" id="memberNickname" value="${sessionScope.memberNickname}" readonly>
		<input type="text" id="replyQuestionContent">
		<button id="btnAdd">답글 달기</button>
	</div>
	
	<hr>
	
	<div style="text-align: center;">
		<div id="replies"></div>
	</div>
	
	<script type="text/javascript">
		$(document).ready(function(){
			
			// 게시글 삭제 관련 기능
			$('#deleteBoard').click(function(){
				if(confirm('삭제하시겠습니까?')){
					$('#deleteForm').submit(); // form 데이터 전송
				}
			}); // end deleteBoard
			
			getAllReply(); // 함수 호출		
			
			// 답글 작성 기능
			$('#btnAdd').click(function(){
				var boardQuestionId = ${boardQuestionVO.boardQuestionId}; // 게시판 번호 데이터
				var memberNickname = $('#memberNickname').val(); // 작성자닉네임데이터
				var memberId = ${sessionScope.memberId}; // 작성자Id 데이터
				var replyQuestionContent = $('#replyQuestionContent').val(); // 답글 내용
				// javascript 객체 생성
				var obj = {
						'boardQuestionId' : boardQuestionId,
						'memberNickname' : memberNickname,
						'memberId' : memberId,
						'replyQuestionContent' : replyQuestionContent
				}
				console.log(obj);
				
				// $.ajax로 송수신
				$.ajax({
					type : 'POST', // 메서드 타입
					url : '../../reply/replyQuestion', // url
					headers : { // 헤더 정보
						'Content-Type' : 'application/json' // json content-type 설정
					}, // 여기 'application/json'이 있어야 문제가 안생긴다.
					data : JSON.stringify(obj), // JSON으로 변환
					success : function(result) { // 전송 성공 시 서버에서 result 값 전송
						console.log(result);
						if(result == 1) {
							alert('답글 입력 성공');
							getAllReply(); // 함수 호출		
						}
					}
				});
			}); // end btnAdd.click()
			
			// 게시판 댓글 전체 가져오기
			function getAllReply() {
				var boardQuestionId = ${boardQuestionVO.boardQuestionId};
				
				var url = '../../reply/allQuestion/' + boardQuestionId;
				$.getJSON(
					url, 		
					function(data) {
						// data : 서버에서 전송받은 list 데이터가 저장되어 있음.
						// getJSON()에서 json 데이터는 
						// javascript object로 자동 parsing됨.
						console.log(data);
						
						var list = ''; // 댓글 데이터를 HTML에 표현할 문자열 변수
						
						// $(컬렉션).each() : 컬렉션 데이터를 반복문으로 꺼내는 함수
						$(data).each(function(){
							// this : 컬렉션의 각 인덱스 데이터를 의미
							console.log(this);
						  
							// 전송된 replyDateCreated는 문자열 형태이므로 날짜 형태로 변환이 필요
							var replyQuestionDateCreated = new Date(this.replyQuestionDateCreated);

							list += '<div class="reply_item">'
								+ '<pre>'
								+ '<input type="hidden" id="replyQuestionId" value="'+ this.replyQuestionId +'">'
								+ this.memberNickname
								+ '&nbsp;&nbsp;' // 공백
								+ '<input type="text" id="replyQuestionContent" value="'+ this.replyQuestionContent +'" readonly>'
								+ '&nbsp;&nbsp;'
								+ this.replyQuestionLike
								+ '&nbsp;&nbsp;'
								+ this.replyQuestionHate
								+ '&nbsp;&nbsp;'
								+ replyQuestionDateCreated
								+ '&nbsp;&nbsp;'
								+ '<button class="btn_update" >수정</button>'
								+ '<button class="btn_delete" >삭제</button>'
								+ '</pre>'
								+ '</div>';
						}); // end each()
							
						$('#replies').html(list); // 저장된 데이터를 replies div 표현
					} // end function()
				); // end getJSON()
			} // end getAllReply()
						
		}); // end document
	</script>

</body>
</html>