<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- Mapper XML 설정 태그 -->

<!-- namespace : 연결할 Mapper 인터페이스 경로 및 이름 -->
<mapper namespace="com.mokcoding.ex03.persistence.BoardMapper">
	
	<!-- 샘 설명
		<resultMap> : DB 쿼리 반환 데이터와 
			Entity(VO) 클래스의 멤버 변수 매핑을 정의하는 태그
		- 속성 :
		type : 연결할 클래스의 패키지와 이름
		id : SQL 쿼리 정의 태그에서 인식되는 이름
	 -->
	 <!-- DB와 자바의 변수명 매칭 시키는 곳 - id는 DB쪽, type은 자바(VO)쪽 -->
	<resultMap type="com.mokcoding.ex03.domain.BoardVO" id="boardResultMap">
		<!-- 
			<id> : key 컬럼 매핑 태그(프라이머리 키 라는 뜻)
			<result> : 일반 컬럼 매핑 태그
			- 속성 :
			property : Entity(VO) 멤버 변수
			column : DB 테이블 컬럼
		 -->
		
		<id property = "boardId" column="BOARD_ID"/>
		<result property = "boardTitle" column="BOARD_TITLE"/>
		<result property = "boardContent" column="BOARD_CONTENT"/>
		<result property = "memberId" column="MEMBER_ID"/>
		<result property = "boardDateCreated" column="BOARD_DATE_CREATED"/>
		<result property =  "replyCount column" column="REPLY_COUNT"/> 
	</resultMap>
	
	<!-- 
		<select>, <insert>, <update>, <delete> : SQL 쿼리 정의 태그
		- 속성 :
		id : Mapper 인터페이스 메서드 매핑 역할.
		resultMap : 쿼리 결과를 resultMap에 매핑. <reulstMap>태그의 id를 적용
		resultType : 쿼리 결과를 클래스에 매핑.
	 -->
	<insert id="insert">
		INSERT INTO BOARD VALUES (BOARD_ID, BOARD_TITLE, BOARD_CONTENT, MEMBER_ID)
		(BOARD_SEQ.NEXTVAL, #{boardTitle}, #{boardContent}, #{memberId})
		<!-- 2024-12-09 게시글에 댓글 수 업데이트 위해 (BOARD_ID, BOARD_TITLE, BOARD_CONTENT, MEMBER_ID) 추가,
		괄호 안에 SYSDATE 없앰, 그 후 아래로 <update>쿼리짜러 내려감-->
	</insert>
	<!-- 
		#{변수명} : Mapper 인터페이스 메소드 매개변수와 매핑되어 전송된 데이터를 적용
	 -->
	 
	 <select id="selectList" resultMap="boardResultMap">
	 	<!-- 전체 게시글 조회 -->
	 	SELECT * FROM BOARD ORDER BY BOARD_ID DESC
	 </select>
	 
	 <select id="selectOne" resultMap="boardResultMap"> <!-- resultMap=DB에서 가져온걸 VO로 던져주고 매칭시키는거 -->
	 	SELECT * FROM BOARD WHERE BOARD_ID = #{boardId}
	 </select>
	 
	 <update id="update">
	 	UPDATE BOARD SET BOARD_TITLE = #{boardTitle}, BOARD_CONTENT = #{boardContent}, 
	 	BOARD_DATE_CREATED = SYSDATE WHERE BOARD_ID = #{boardId}
	 </update>
	 
	 <delete id="delete">
	 	DELETE BOARD WHERE BOARD_ID = #{boardId}
	 </delete>
	 
	 <select id="selectListByPagination" resultMap="boardResultMap"> <!-- resultMap을 꼭 넣자 -->
	 	SELECT * FROM
	 	(
	 		SELECT ROW_NUMBER() OVER (ORDER BY BOARD_ID DESC)
	 		AS RN, BOARD.* FROM BOARD
	 	)
	 	WHERE RN BETWEEN #{start} AND #{end}
	 </select>
	 <!-- 
	 #{start} : Pagination 객체의 getStart()
	 #{end} : Pagination 객체의 getEnd()
	  -->
	 
	 <!-- resultType : 쿼리 결과를 자바 객체에 매핑하기 위해 사용 -->
	 <!-- resultMap과 혼동해서 사용하지 말고 잘 구별하자 -->
	 <select id = "selectTotalCount" resultType = "Integer">
	 	SELECT COUNT(*) TOTAL_COUNT FROM BOARD
	 </select>
	 
	 <update id="updateReplyCount">
	 	UPDATE BOARD
	 	SET REPLY_COUNT = REPLY_COUNT + #{amount}
	 	WHERE BOARD_ID = #{boardId}
	 
	 </update>
	 
</mapper>
