/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.46
 * Generated at: 2025-01-16 08:14:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.boardReal.boardQuestion;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class boardQuestionDetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(5);
    _jspx_dependants.put("jar:file:/C:/Users/sdedu/Desktop/SPRING_CODES/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/KMS_PROJECT_YESFUTURE/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/C:/Users/sdedu/Desktop/SPRING_CODES/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/KMS_PROJECT_YESFUTURE/WEB-INF/lib/spring-security-taglibs-5.2.2.RELEASE.jar!/META-INF/security.tld", Long.valueOf(1580887502000L));
    _jspx_dependants.put("jar:file:/C:/Users/sdedu/Desktop/SPRING_CODES/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/KMS_PROJECT_YESFUTURE/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1733282290650L));
    _jspx_dependants.put("/WEB-INF/lib/spring-security-taglibs-5.2.2.RELEASE.jar", Long.valueOf(1733808086903L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvar_005fvalue_005fpattern_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fvar_005fproperty_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fproperty_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvar_005fvalue_005fpattern_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fvar_005fproperty_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fproperty_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvar_005fvalue_005fpattern_005fnobody.release();
    _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fvar_005fproperty_005fnobody.release();
    _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fproperty_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<meta name=\"_csrf\" content=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.token}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("<meta name=\"_csrf_header\" content=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.headerName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("<!-- jquery 라이브러리 import -->\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.7.1.js\">\r\n");
      out.write("</script>\r\n");
      out.write("<link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\" \r\n");
      out.write("rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<!-- css 파일 불러오기 -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/image.css\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/attach.css\">\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("	    /* 경계선 스타일 */\r\n");
      out.write("	    .divider {\r\n");
      out.write("	        border: none;\r\n");
      out.write("	        border-top: 1px solid #000; /* 얇은 검은색 선 */\r\n");
      out.write("	        margin: 0;\r\n");
      out.write("	    }\r\n");
      out.write("	        \r\n");
      out.write("	    /* 메뉴바 스타일 */\r\n");
      out.write("	    .menu-bar {\r\n");
      out.write("	        display: flex; /* Flexbox 적용 */\r\n");
      out.write("	        justify-content: flex-start; /* 왼쪽부터 가로로 배치 */\r\n");
      out.write("	        align-items: center; /* 세로 중앙 정렬 */\r\n");
      out.write("	        padding: 10px 20px; /* 메뉴바 안쪽 여백 */\r\n");
      out.write("	    }\r\n");
      out.write("        \r\n");
      out.write("        /* 좌측 버튼 스타일 */\r\n");
      out.write("		.group1 {\r\n");
      out.write("		    display: flex;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		/* 우측 버튼 그룹 스타일 */\r\n");
      out.write("		.group2 {\r\n");
      out.write("		    display: flex;\r\n");
      out.write("		    margin-left: auto; /* 우측으로 밀어붙임 */\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		        /* 버튼 사이의 간격 설정 */\r\n");
      out.write("        .menu-bar a {\r\n");
      out.write("            margin-right: 20px; /* 각 버튼 사이의 간격 (원하는 값으로 조정 가능) */\r\n");
      out.write("            text-decoration: none; /* 링크 밑줄 제거 */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* 버튼 스타일 (옵션) */\r\n");
      out.write("        input[type=\"button\"] {\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            padding: 10px 20px;\r\n");
      out.write("            background-color: #4CAF50;\r\n");
      out.write("            color: white;\r\n");
      out.write("            border: none;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        /* 특정 value (닉네임 버튼)에 스타일 적용 */\r\n");
      out.write("    	input[type=\"button\"][value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.memberNickname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"] {\r\n");
      out.write("        background-color: transparent; /* 배경을 투명하게 설정 */\r\n");
      out.write("        color: #4CAF50; /* 글자 색상 설정 */\r\n");
      out.write("        border: 1px solid #4CAF50; /* 선택사항: 테두리 추가 */\r\n");
      out.write("    	}\r\n");
      out.write("    	\r\n");
      out.write("        /* 버튼에 마우스를 올렸을 때 스타일 (옵션) */\r\n");
      out.write("        input[type=\"button\"]:hover {\r\n");
      out.write("            background-color: #45a049;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        /* 전체 레이아웃 */\r\n");
      out.write("        .container {\r\n");
      out.write("            height: 80vh; /* 화면 높이의 80%를 사용 */\r\n");
      out.write("        }\r\n");
      out.write("        			\r\n");
      out.write("		table, th, td {\r\n");
      out.write("			border-style: solid;\r\n");
      out.write("			border-width: 1px;\r\n");
      out.write("			text-align: center;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		ul {\r\n");
      out.write("			list-style-type: none;\r\n");
      out.write("			text-align: center;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		li {\r\n");
      out.write("			display: inline-block;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.reply_item .btn_like, \r\n");
      out.write("		.reply_item .btn_hate {\r\n");
      out.write("		    background-color: transparent; /* 버튼 배경색 제거 */\r\n");
      out.write("		    border: none; /* 테두리 제거 */\r\n");
      out.write("		    cursor: pointer; /* 클릭 가능한 포인터 표시 */\r\n");
      out.write("		    font-size: 18px; /* 아이콘 크기 */\r\n");
      out.write("		    margin-right: 5px; /* 버튼 간격 */\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.reply_item .btn_like i {\r\n");
      out.write("		    color: transparent; /* 내부는 투명 */\r\n");
      out.write("		    -webkit-text-stroke: 1px red; /* 테두리는 빨간색 */\r\n");
      out.write("		    text-stroke: 1px red; /* 테두리는 빨간색 */\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.reply_item .btn_like.liked i {\r\n");
      out.write("		    color: red; /* 내부 빨간색 */\r\n");
      out.write("		    -webkit-text-stroke: 0; /* 테두리 없음 */\r\n");
      out.write("		    text-stroke: 0; /* 테두리 없음 */\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.reply_item .btn_hate i {\r\n");
      out.write("			color: transparent; /* 내부는 투명 */\r\n");
      out.write("		    -webkit-text-stroke: 1px blue; /* 테두리는 빨간색 */\r\n");
      out.write("		    text-stroke: 1px blue; /* 테두리는 빨간색 */\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.reply_item .btn_like:hover i {\r\n");
      out.write("		    color: red; /* 좋아요 아이콘 호버 색상 */\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.reply_item .btn_like.liked:hover i {\r\n");
      out.write("		    color: red; /* 좋아요 아이콘 호버 색상 */\r\n");
      out.write("		    -webkit-text-stroke: 1px black; /* 테두리 없음 */\r\n");
      out.write("		    text-stroke: 1px black; /* 테두리 없음 */\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.reply_item .btn_hate:hover i {\r\n");
      out.write("		    color: blue; /* 싫어요 아이콘 호버 색상 */\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardQuestionVO.boardQuestionTitle }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<h1>질문 게시판</h1>\r\n");
      out.write("		\r\n");
      out.write("	<div class=\"menu-bar\">\r\n");
      out.write("        <!-- 이 위치에 main으로 가는 버튼 만들기 -->\r\n");
      out.write("        <a href=\"problemMain\" class=\"group1\"><input type=\"button\" value=\"문제은행 가기\"></a>\r\n");
      out.write("        <a href=\"boardMain\" class=\"group1\"><input type=\"button\" value=\"게시판\"></a>\r\n");
      out.write("	\r\n");
      out.write("		<div class=\"group2\">\r\n");
      out.write("			");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("			\r\n");
      out.write("			");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<!-- 가로 경계선 -->\r\n");
      out.write("    <hr class=\"divider\">\r\n");
      out.write("    \r\n");
      out.write("    	<!-- 메인 레이아웃 -->\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("	    <div>\r\n");
      out.write("			<p>제목 : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardQuestionVO.boardQuestionTitle }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div>\r\n");
      out.write("			<p>작성자 : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardQuestionVO.memberNickname }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("			<!-- boardDateCreated 데이터 포멧 변경 -->\r\n");
      out.write("			");
      if (_jspx_meth_fmt_005fformatDate_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("			<p>작성일 : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardQuestionDateCreated }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div>\r\n");
      out.write("			<textarea rows=\"20\" cols=\"120\" readonly>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardQuestionVO.boardQuestionContent }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</textarea>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		<button onclick=\"location.href='boardQuestion'\">글 목록</button>\r\n");
      out.write("		");
      if (_jspx_meth_sec_005fauthentication_005f0(_jspx_page_context))
        return;
      out.write("	\r\n");
      out.write("		");
      if (_jspx_meth_sec_005fauthorize_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<form id=\"modifyForm\" action=\"modifyQuestion\" method=\"GET\">\r\n");
      out.write("		<input type=\"hidden\" name=\"boardQuestionId\">\r\n");
      out.write("	</form>\r\n");
      out.write("	<form id=\"deleteForm\" action=\"deleteQuestion\" method=\"POST\">\r\n");
      out.write("		<input type=\"hidden\" name=\"boardQuestionId\">\r\n");
      out.write("    	<input type=\"hidden\" name=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.parameterName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.token }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("	</form>\r\n");
      out.write("	\r\n");
      out.write("	<!-- 이미지 파일 영역 -->\r\n");
      out.write("	<div class=\"image-upload\">\r\n");
      out.write("		<div class=\"image-view\">\r\n");
      out.write("			<h2>이미지 파일 리스트</h2>\r\n");
      out.write("			<div class=\"image-list\">\r\n");
      out.write("				<!-- 이미지 파일 처리 코드 -->\r\n");
      out.write("				");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<!-- 첨부 파일 영역 -->\r\n");
      out.write("	<div class=\"attach-upload\">\r\n");
      out.write("		<div class=\"attach-view\">\r\n");
      out.write("			<h2>첨부 파일 리스트</h2>\r\n");
      out.write("			<div class=\"attach-list\">\r\n");
      out.write("			");
      if (_jspx_meth_c_005fforEach_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<div style=\"text-align: center;\">\r\n");
      out.write("		<input type=\"text\" id=\"memberNickname\" value=\"");
      if (_jspx_meth_sec_005fauthentication_005f1(_jspx_page_context))
        return;
      out.write("\" readonly>\r\n");
      out.write("		<input type=\"hidden\" id=\"memberId\" value=\"");
      if (_jspx_meth_sec_005fauthentication_005f2(_jspx_page_context))
        return;
      out.write("\" readonly>\r\n");
      out.write("		<input type=\"text\" id=\"replyQuestionContent\">\r\n");
      out.write("		<button id=\"btnAdd\">댓글 달기</button>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<hr>\r\n");
      out.write("	\r\n");
      out.write("	<div style=\"text-align: center;\">\r\n");
      out.write("		<div id=\"replies\"></div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		\r\n");
      out.write("		$(document).ajaxSend(function(e, xhr, opt){\r\n");
      out.write("			var token = $(\"meta[name='_csrf']\").attr(\"content\");\r\n");
      out.write("			var header = $(\"meta[name='_csrf_header']\").attr(\"content\");\r\n");
      out.write("			\r\n");
      out.write("			xhr.setRequestHeader(header, token);\r\n");
      out.write("		});\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("		$(document).ready(function(){\r\n");
      out.write("			\r\n");
      out.write("			// 게시글 수정\r\n");
      out.write("			$('#modify').click(function(){\r\n");
      out.write("				var modifyForm = $(\"#modifyForm\"); // form 객체 참조\r\n");
      out.write("				var boardId = \"");
      if (_jspx_meth_c_005fout_005f0(_jspx_page_context))
        return;
      out.write("\";\r\n");
      out.write("				// 게시글 번호를 input name='boardQuestionId' 값으로 적용\r\n");
      out.write("				modifyForm.find(\"input[name='boardQuestionId']\").val(boardId);	\r\n");
      out.write("				\r\n");
      out.write("				$('#modifyForm').submit();\r\n");
      out.write("			})\r\n");
      out.write("			\r\n");
      out.write("			// 게시글 삭제\r\n");
      out.write("			$('#delete').click(function(){\r\n");
      out.write("				if(confirm('삭제하시겠습니까?')){\r\n");
      out.write("					var deleteForm = $(\"#deleteForm\"); // form 객체 참조\r\n");
      out.write("					var boardId = \"");
      if (_jspx_meth_c_005fout_005f1(_jspx_page_context))
        return;
      out.write("\";\r\n");
      out.write("					// 게시글 번호를 input name='boardQuestionId' 값으로 적용\r\n");
      out.write("					deleteForm.find(\"input[name='boardQuestionId']\").val(boardId);	\r\n");
      out.write("					\r\n");
      out.write("					$('#deleteForm').submit(); // form 데이터 전송\r\n");
      out.write("				}\r\n");
      out.write("			}); // end deleteBoard\r\n");
      out.write("			\r\n");
      out.write("			getAllReply(); // 함수 호출		\r\n");
      out.write("			\r\n");
      out.write("			// 댓글 작성 기능\r\n");
      out.write("			$('#btnAdd').click(function(){\r\n");
      out.write("				var boardQuestionId = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardQuestionVO.boardQuestionId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("; // 게시판 번호 데이터\r\n");
      out.write("				var memberNickname = $('#memberNickname').val(); // 작성자닉네임데이터\r\n");
      out.write("				var memberId = $('#memberId').val(); // 작성자Id 데이터\r\n");
      out.write("				var replyQuestionContent = $('#replyQuestionContent').val(); // 댓글 내용\r\n");
      out.write("				\r\n");
      out.write("				if(replyQuestionContent.trim() === '') {\r\n");
      out.write("					alert('내용을 입력해 주세요.');\r\n");
      out.write("					return;\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				// javascript 객체 생성\r\n");
      out.write("				var obj = {\r\n");
      out.write("						'boardQuestionId' : boardQuestionId,\r\n");
      out.write("						'memberNickname' : memberNickname,\r\n");
      out.write("						'memberId' : memberId,\r\n");
      out.write("						'replyQuestionContent' : replyQuestionContent\r\n");
      out.write("				}\r\n");
      out.write("				console.log(obj);\r\n");
      out.write("				\r\n");
      out.write("				// $.ajax로 송수신\r\n");
      out.write("				$.ajax({\r\n");
      out.write("					type : 'POST', // 메서드 타입\r\n");
      out.write("					url : '../../reply/replyQuestion', // url\r\n");
      out.write("					headers : { // 헤더 정보\r\n");
      out.write("						'Content-Type' : 'application/json' // json content-type 설정\r\n");
      out.write("					}, // 여기 'application/json'이 있어야 문제가 안생긴다.\r\n");
      out.write("					data : JSON.stringify(obj), // JSON으로 변환\r\n");
      out.write("					success : function(result) { // 전송 성공 시 서버에서 result 값 전송\r\n");
      out.write("						console.log(result);\r\n");
      out.write("						if(result == 1) {\r\n");
      out.write("							alert('댓글 입력 성공');\r\n");
      out.write("							getAllReply(); // 함수 호출		\r\n");
      out.write("						}\r\n");
      out.write("					}\r\n");
      out.write("				});\r\n");
      out.write("			}); // end btnAdd.click()\r\n");
      out.write("\r\n");
      out.write("			\r\n");
      out.write("			// 게시판 댓글 전체 가져오기\r\n");
      out.write("			function getAllReply() {\r\n");
      out.write("				var boardQuestionId = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardQuestionVO.boardQuestionId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("				\r\n");
      out.write("				var url = '../../reply/allQuestion/' + boardQuestionId;\r\n");
      out.write("				\r\n");
      out.write("				$.getJSON(\r\n");
      out.write("					url, 		\r\n");
      out.write("					function(data) {\r\n");
      out.write("						// data : 서버에서 전송받은 list 데이터가 저장되어 있음.\r\n");
      out.write("						// getJSON()에서 json 데이터는 \r\n");
      out.write("						// javascript object로 자동 parsing됨.\r\n");
      out.write("						console.log(data);\r\n");
      out.write("						\r\n");
      out.write("						var list = ''; // 댓글 데이터를 HTML에 표현할 문자열 변수\r\n");
      out.write("						\r\n");
      out.write("						// $(컬렉션).each() : 컬렉션 데이터를 반복문으로 꺼내는 함수\r\n");
      out.write("						$(data).each(function(){\r\n");
      out.write("							var isLikedByCurrentUser = this.likedByCurrentUser; // 서버에서 전달받은 좋아요정보\r\n");
      out.write("							console.log(\"isLikedByCurrentUser : \" + isLikedByCurrentUser);\r\n");
      out.write("							// this : 컬렉션의 각 인덱스 데이터를 의미\r\n");
      out.write("							console.log(this);\r\n");
      out.write("						  	\r\n");
      out.write("							var replyQuestionId = this.replyQuestionId;\r\n");
      out.write("							// 전송된 replyDateCreated는 문자열 형태이므로 날짜 형태로 변환이 필요\r\n");
      out.write("							var replyQuestionDateCreated = new Date(this.replyQuestionDateCreated);\r\n");
      out.write("							\r\n");
      out.write("							// 좋아요 버튼 스타일 결정\r\n");
      out.write("				            var likeButtonClass = isLikedByCurrentUser ? 'btn_like liked' : 'btn_like';\r\n");
      out.write("				            console.log(\"likeButtonClass : \" + likeButtonClass);\r\n");
      out.write("				            \r\n");
      out.write("							list += '<div class=\"reply_item\">'\r\n");
      out.write("								+ '<pre>'\r\n");
      out.write("								+ '<input type=\"hidden\" id=\"replyQuestionId\" value=\"'+ this.replyQuestionId +'\">'\r\n");
      out.write("								+ this.memberNickname\r\n");
      out.write("								+ '&nbsp;&nbsp;' // 공백\r\n");
      out.write("								+ '&nbsp;&nbsp;'\r\n");
      out.write("								+ '<input type=\"text\" id=\"replyQuestionContent\" value=\"'+ this.replyQuestionContent +'\" readonly>'\r\n");
      out.write("								+ '&nbsp;&nbsp;'\r\n");
      out.write("								+ '&nbsp;&nbsp;'\r\n");
      out.write("								+ '<span style=\"color:red;\">'+ this.replyQuestionLike +'</span>'\r\n");
      out.write("								+ '&nbsp;&nbsp;'\r\n");
      out.write("								+ '&nbsp;&nbsp;'\r\n");
      out.write("								+ '<span style=\"color:blue;\">'+ this.replyQuestionHate +'</span>'\r\n");
      out.write("								+ '&nbsp;&nbsp;'\r\n");
      out.write("								+ '&nbsp;&nbsp;'\r\n");
      out.write("								+ '<button class=\"'+ likeButtonClass +'\"><i class=\"fas fa-thumbs-up\"></i></button>'\r\n");
      out.write("								+ '&nbsp;&nbsp;'\r\n");
      out.write("								+ '<button class=\"btn_hate\"><i class=\"fas fa-thumbs-down\"></i></button>'\r\n");
      out.write("								+ '&nbsp;&nbsp;'\r\n");
      out.write("								+ '&nbsp;&nbsp;'\r\n");
      out.write("								+ replyQuestionDateCreated\r\n");
      out.write("								+ '&nbsp;&nbsp;'\r\n");
      out.write("								+ '&nbsp;&nbsp;'\r\n");
      out.write("								+ '<button class=\"btn_update\" >수정</button>'\r\n");
      out.write("								+ '&nbsp;&nbsp;'\r\n");
      out.write("								+ '<button class=\"btn_delete\" >삭제</button>'\r\n");
      out.write("								+ '&nbsp;&nbsp;'\r\n");
      out.write("								+ '<button class=\"btn_subReply\" >답글</button>'\r\n");
      out.write("								+ '</pre>';\r\n");
      out.write("								\r\n");
      out.write("								var subReplyUrl = '../../subReply/allQuestion/' + replyQuestionId;\r\n");
      out.write("								\r\n");
      out.write("								$.ajax({\r\n");
      out.write("					                url: subReplyUrl,\r\n");
      out.write("					                type: 'GET',\r\n");
      out.write("					                async: false, // 동기식으로 처리 (순차적으로 답글을 가져오기 위해) \r\n");
      out.write("					                success: function(subReplyData) {\r\n");
      out.write("					                    console.log(subReplyData);\r\n");
      out.write("\r\n");
      out.write("					                    list += '<div class=\"sub_reply_list\">';\r\n");
      out.write("\r\n");
      out.write("					                    // 답글 반복문\r\n");
      out.write("					                    $(subReplyData).each(function() {\r\n");
      out.write("					                    	console.log(\"this : \" + this)\r\n");
      out.write("					                    	\r\n");
      out.write("					                    	if (this.replyQuestionId === replyQuestionId) {\r\n");
      out.write("						                        var subReplyQuestionDateCreated = new Date(this.subReplyQuestionDateCreated);\r\n");
      out.write("												\r\n");
      out.write("						                        list += '<div class=\"sub_reply_item\">'\r\n");
      out.write("						                              + '<pre>'\r\n");
      out.write("						                              + '<input type=\"hidden\" id=\"subReplyQuestionId\" value=\"'+ this.subReplyQuestionId +'\">'\r\n");
      out.write("						                              + 'ㄴ' + this.memberNickname\r\n");
      out.write("						                              + '&nbsp;&nbsp;'\r\n");
      out.write("						                              + '<input type=\"text\" id=\"subReplyQuestionContent\" value=\"'+ this.subReplyQuestionContent +'\" readonly>'\r\n");
      out.write("						                              + '&nbsp;&nbsp;'\r\n");
      out.write("						                              + '<span style=\"color:red;\">'+ this.subReplyQuestionLike +'</span>'\r\n");
      out.write("						                              + '&nbsp;&nbsp;'\r\n");
      out.write("						                              + '&nbsp;&nbsp;'\r\n");
      out.write("						                              + '<span style=\"color:blue;\">'+ this.subReplyQuestionHate +'</span>'\r\n");
      out.write("													  + '&nbsp;&nbsp;'\r\n");
      out.write("													  + '&nbsp;&nbsp;'\r\n");
      out.write("													  + '<button class=\"btn_like\"><i class=\"fas fa-thumbs-up\"></i></button>'\r\n");
      out.write("													  + '&nbsp;&nbsp;'\r\n");
      out.write("													  + '<button class=\"btn_hate\"><i class=\"fas fa-thumbs-down\"></i></button>'\r\n");
      out.write("													  + '&nbsp;&nbsp;'\r\n");
      out.write("													  + '&nbsp;&nbsp;'\r\n");
      out.write("						                              + subReplyQuestionDateCreated\r\n");
      out.write("						                              + '&nbsp;&nbsp;'\r\n");
      out.write("						                              + '<button class=\"btn_update_sub\">수정</button>'\r\n");
      out.write("						                              + '&nbsp;&nbsp;'\r\n");
      out.write("						                              + '<button class=\"btn_delete_sub\">삭제</button>'\r\n");
      out.write("						                              + '</pre>'\r\n");
      out.write("						                              + '</div>';\r\n");
      out.write("					                    	}              \r\n");
      out.write("					                    });\r\n");
      out.write("\r\n");
      out.write("					                    list += '</div>'; // 답글 리스트 닫기\r\n");
      out.write("					                }\r\n");
      out.write("					            });\r\n");
      out.write("\r\n");
      out.write("					            list += '</div>'; // 댓글 닫기\r\n");
      out.write("						}); // end each()\r\n");
      out.write("							\r\n");
      out.write("						$('#replies').html(list); // 저장된 데이터를 replies div 표현\r\n");
      out.write("					} // end function()\r\n");
      out.write("				); // end getJSON()\r\n");
      out.write("			} // end getAllReply()\r\n");
      out.write("			\r\n");
      out.write("		    // 답글 입력 폼 표시\r\n");
      out.write("		    $('#replies').on('click', '.btn_subReply', function() {\r\n");
      out.write("		        var replyQuestionId = $(this).closest('.reply_item').find('input#replyQuestionId').val();\r\n");
      out.write("				console.log(\"replyQuestionId : \" + replyQuestionId);\r\n");
      out.write("				\r\n");
      out.write("		        // 기존 답글 입력 폼이 있다면 삭제\r\n");
      out.write("		        $('.subReplyForm').remove();\r\n");
      out.write("		\r\n");
      out.write("		        // 답글 입력 폼 생성\r\n");
      out.write("		        var subReplyForm = `\r\n");
      out.write("		            <div class=\"subReplyForm\">\r\n");
      out.write("		                <input type=\"text\" id=\"subReplyContent\" placeholder=\"답글 내용을 입력하세요\">\r\n");
      out.write("		                <button class=\"btnAddSubReply\" data-replyQuestionId=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${replyQuestionId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">답글 달기</button>\r\n");
      out.write("		            </div>\r\n");
      out.write("		        `;\r\n");
      out.write("		        $(this).after(subReplyForm);\r\n");
      out.write("		    });\r\n");
      out.write("			\r\n");
      out.write("		    // 답글 추가 버튼 클릭 이벤트\r\n");
      out.write("		    $('#replies').on('click', '.btnAddSubReply', function() {\r\n");
      out.write("		        var replyQuestionId = $(this).closest('.reply_item').find('input#replyQuestionId').val();\r\n");
      out.write("				var memberNickname = $('#memberNickname').val(); // 작성자닉네임데이터\r\n");
      out.write("				var memberId = $('#memberId').val(); // 작성자Id 데이터\r\n");
      out.write("		        var subReplyQuestionContent = $('#subReplyContent').val();\r\n");
      out.write("		        console.log(\"replyQuestionId : \" + replyQuestionId);\r\n");
      out.write("		        \r\n");
      out.write("		        if (subReplyQuestionContent.trim() === '') {\r\n");
      out.write("		            alert('내용을 입력해주세요.');\r\n");
      out.write("		            return;\r\n");
      out.write("		        }\r\n");
      out.write("		\r\n");
      out.write("				// javascript 객체 생성\r\n");
      out.write("				var subReplyObj = {\r\n");
      out.write("						'replyQuestionId' : replyQuestionId,\r\n");
      out.write("						'memberNickname' : memberNickname,\r\n");
      out.write("						'memberId' : memberId,\r\n");
      out.write("						'subReplyQuestionContent' : subReplyQuestionContent\r\n");
      out.write("				}\r\n");
      out.write("				console.log(subReplyObj);\r\n");
      out.write("		\r\n");
      out.write("		        // AJAX 요청\r\n");
      out.write("		        $.ajax({\r\n");
      out.write("		            type: 'POST',\r\n");
      out.write("		            url: '../../subReply/subReplyQuestion',\r\n");
      out.write("		            headers: { 'Content-Type': 'application/json' },\r\n");
      out.write("		            data: JSON.stringify(subReplyObj),\r\n");
      out.write("		            success: function(result) {\r\n");
      out.write("		                if (result == 1) {\r\n");
      out.write("		                	alert('답글 입력 성공');\r\n");
      out.write("							// 댓글, 답글 목록 출력 함수 호출\r\n");
      out.write("		                    // 입력 폼 제거\r\n");
      out.write("		                    $('.subReplyForm').remove();\r\n");
      out.write("		                    getAllReply();\r\n");
      out.write("		                }\r\n");
      out.write("		            }\r\n");
      out.write("		        });\r\n");
      out.write("		    });\r\n");
      out.write("			\r\n");
      out.write("		    // 좋아요 버튼\r\n");
      out.write("		    $('#replies').on('click', '.btn_like', function() {\r\n");
      out.write("		    	var $this = $(this); // 클릭된 버튼\r\n");
      out.write("		        var memberNickname = $('#memberNickname').val();\r\n");
      out.write("		        var replyQuestionId = $(this).closest('.reply_item').find('input#replyQuestionId').val();\r\n");
      out.write("		        \r\n");
      out.write("		     	// javascript 객체 생성\r\n");
      out.write("				var obj = {\r\n");
      out.write("						'replyQuestionId' : replyQuestionId,\r\n");
      out.write("						'memberNickname' : memberNickname,\r\n");
      out.write("				}\r\n");
      out.write("				console.log(obj);\r\n");
      out.write("		        \r\n");
      out.write("		     	// AJAX 요청\r\n");
      out.write("		        $.ajax({\r\n");
      out.write("		            type: 'POST',\r\n");
      out.write("		            url: '../../like/replyLike',\r\n");
      out.write("		            headers: { 'Content-Type': 'application/json' },\r\n");
      out.write("		            data: JSON.stringify(obj),\r\n");
      out.write("		            success: function(result) {\r\n");
      out.write("		            	console.log(\"Response from server : \" + result);\r\n");
      out.write("		                if (result === \"success\") {\r\n");
      out.write("		                    alert(\"좋아요를 눌렀습니다.\");\r\n");
      out.write("		                    // 좋아요 버튼 UI 업데이트 (예: 버튼 색 변경)\r\n");
      out.write("		    				// 비동기로 좋아요, 싫어요 업데이트 or getAllReply();\r\n");
      out.write("		                    $this.addClass('liked');\r\n");
      out.write("		                } else if (result === \"cancel\") {\r\n");
      out.write("		                    alert(\"좋아요를 취소했습니다.\");\r\n");
      out.write("		                    // 좋아요 취소 UI 업데이트 (예: 버튼 색 복원)\r\n");
      out.write("		    				// 비동기로 좋아요, 싫어요 업데이트 or getAllReply();\r\n");
      out.write("		                    $this.removeClass('liked');\r\n");
      out.write("		                }\r\n");
      out.write("		            }\r\n");
      out.write("		        }); // end ajax\r\n");
      out.write("		    });\r\n");
      out.write("		    \r\n");
      out.write("		    // 싫어요 버튼\r\n");
      out.write("		    \r\n");
      out.write("		}); // end document\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/boardReal/boardQuestion/boardQuestionDetail.jsp(154,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty sessionScope.memberEmail }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			<!-- 회원 가입 버튼 -->\r\n");
          out.write("		    <a href=\"agree\"><input type=\"button\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardQuestionVO.boardQuestionId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"></a>\r\n");
          out.write("		    <!-- 로그인 버튼 -->\r\n");
          out.write("		    <a href=\"login\"><input type=\"button\" value=\"로그인\"></a>\r\n");
          out.write("			");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/boardReal/boardQuestion/boardQuestionDetail.jsp(161,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty sessionScope.memberEmail }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			<a href=\"mypage\"><input type=\"button\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.memberNickname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"></a>\r\n");
          out.write("			<a href=\"../board/logout\"><input type=\"button\" value=\"로그아웃\"></a>\r\n");
          out.write("			");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fformatDate_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:formatDate
    org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag _jspx_th_fmt_005fformatDate_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag) _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvar_005fvalue_005fpattern_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag.class);
    boolean _jspx_th_fmt_005fformatDate_005f0_reused = false;
    try {
      _jspx_th_fmt_005fformatDate_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fformatDate_005f0.setParent(null);
      // /WEB-INF/views/boardReal/boardQuestion/boardQuestionDetail.jsp(179,3) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f0.setValue((java.util.Date) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardQuestionVO.boardQuestionDateCreated }", java.util.Date.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /WEB-INF/views/boardReal/boardQuestion/boardQuestionDetail.jsp(179,3) name = pattern type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f0.setPattern("yyyy-MM-dd HH:mm:ss");
      // /WEB-INF/views/boardReal/boardQuestion/boardQuestionDetail.jsp(179,3) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f0.setVar("boardQuestionDateCreated");
      int _jspx_eval_fmt_005fformatDate_005f0 = _jspx_th_fmt_005fformatDate_005f0.doStartTag();
      if (_jspx_th_fmt_005fformatDate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvar_005fvalue_005fpattern_005fnobody.reuse(_jspx_th_fmt_005fformatDate_005f0);
      _jspx_th_fmt_005fformatDate_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fformatDate_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fformatDate_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthentication_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authentication
    org.springframework.security.taglibs.authz.AuthenticationTag _jspx_th_sec_005fauthentication_005f0 = (org.springframework.security.taglibs.authz.AuthenticationTag) _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fvar_005fproperty_005fnobody.get(org.springframework.security.taglibs.authz.AuthenticationTag.class);
    boolean _jspx_th_sec_005fauthentication_005f0_reused = false;
    try {
      _jspx_th_sec_005fauthentication_005f0.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthentication_005f0.setParent(null);
      // /WEB-INF/views/boardReal/boardQuestion/boardQuestionDetail.jsp(188,2) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthentication_005f0.setProperty("principal");
      // /WEB-INF/views/boardReal/boardQuestion/boardQuestionDetail.jsp(188,2) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthentication_005f0.setVar("user");
      int _jspx_eval_sec_005fauthentication_005f0 = _jspx_th_sec_005fauthentication_005f0.doStartTag();
      if (_jspx_th_sec_005fauthentication_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fvar_005fproperty_005fnobody.reuse(_jspx_th_sec_005fauthentication_005f0);
      _jspx_th_sec_005fauthentication_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthentication_005f0, _jsp_getInstanceManager(), _jspx_th_sec_005fauthentication_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f0 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f0_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f0.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f0.setParent(null);
      // /WEB-INF/views/boardReal/boardQuestion/boardQuestionDetail.jsp(189,2) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f0.setAccess("isAuthenticated()");
      int _jspx_eval_sec_005fauthorize_005f0 = _jspx_th_sec_005fauthorize_005f0.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\r\n");
        out.write("			");
        if (_jspx_meth_c_005fif_005f2(_jspx_th_sec_005fauthorize_005f0, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("		");
      }
      if (_jspx_th_sec_005fauthorize_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f0);
      _jspx_th_sec_005fauthorize_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f0, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f0);
      // /WEB-INF/views/boardReal/boardQuestion/boardQuestionDetail.jsp(190,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardQuestionVO.memberNickname eq user.member.memberNickname}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				<button id=\"modify\">글 수정</button>\r\n");
          out.write("				<button id=\"delete\">글 삭제</button>		\r\n");
          out.write("			");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/boardReal/boardQuestion/boardQuestionDetail.jsp(211,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("attachQuestionVO");
      // /WEB-INF/views/boardReal/boardQuestion/boardQuestionDetail.jsp(211,4) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/boardReal/boardQuestion/boardQuestionDetail.jsp(211,4) '${boardQuestionVO.attachQuestionList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${boardQuestionVO.attachQuestionList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("				    ");
            if (_jspx_meth_c_005fif_005f3(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\r\n");
            out.write("				");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f3_reused = false;
    try {
      _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /WEB-INF/views/boardReal/boardQuestion/boardQuestionDetail.jsp(212,8) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attachQuestionVO.attachQuestionExtension eq 'jpg' or \r\n				    			  attachQuestionVO.attachQuestionExtension eq 'jpeg' or \r\n				    			  attachQuestionVO.attachQuestionExtension eq 'png' or \r\n				    			  attachQuestionVO.attachQuestionExtension eq 'gif'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
      if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				        <div class=\"image_item\">\r\n");
          out.write("				        	<a href=\"../../image/get?attachQuestionId=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attachQuestionVO.attachQuestionId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"\r\n");
          out.write("				        		 target=\"_blank\">\r\n");
          out.write("				        	<!-- 아래 img는 썸네일 관련 코드 -->\r\n");
          out.write("					        <img width=\"100px\" height=\"100px\" \r\n");
          out.write("					        src=\"../../image/get?attachQuestionId=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attachQuestionVO.attachQuestionId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\r\n");
          out.write("					        	&attachQuestionExtension=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attachQuestionVO.attachQuestionExtension}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"/>\r\n");
          out.write("					        </a>\r\n");
          out.write("				        </div>\r\n");
          out.write("				    ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
      _jspx_th_c_005fif_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent(null);
      // /WEB-INF/views/boardReal/boardQuestion/boardQuestionDetail.jsp(236,3) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("attachQuestionVO");
      // /WEB-INF/views/boardReal/boardQuestion/boardQuestionDetail.jsp(236,3) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/boardReal/boardQuestion/boardQuestionDetail.jsp(236,3) '${boardQuestionVO.attachQuestionList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${boardQuestionVO.attachQuestionList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("		 		");
            if (_jspx_meth_c_005fif_005f4(_jspx_th_c_005fforEach_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
              return true;
            out.write("\r\n");
            out.write("			");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f4 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f4_reused = false;
    try {
      _jspx_th_c_005fif_005f4.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f1);
      // /WEB-INF/views/boardReal/boardQuestion/boardQuestionDetail.jsp(237,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f4.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not (attachQuestionVO.attachQuestionExtension eq 'jpg' or \r\n			    			  attachQuestionVO.attachQuestionExtension eq 'jpeg' or \r\n			    			  attachQuestionVO.attachQuestionExtension eq 'png' or \r\n			    			  attachQuestionVO.attachQuestionExtension eq 'gif')}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f4 = _jspx_th_c_005fif_005f4.doStartTag();
      if (_jspx_eval_c_005fif_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			    	<div class=\"attach_item\">\r\n");
          out.write("			    	<p><a href=\"../../attach/download?attachQuestionId=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attachQuestionVO.attachQuestionId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('"');
          out.write('>');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attachQuestionVO.attachQuestionRealName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('.');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attachQuestionVO.attachQuestionExtension }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</a></p>\r\n");
          out.write("			    	</div>\r\n");
          out.write("			    ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f4.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f4);
      _jspx_th_c_005fif_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f4, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthentication_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authentication
    org.springframework.security.taglibs.authz.AuthenticationTag _jspx_th_sec_005fauthentication_005f1 = (org.springframework.security.taglibs.authz.AuthenticationTag) _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fproperty_005fnobody.get(org.springframework.security.taglibs.authz.AuthenticationTag.class);
    boolean _jspx_th_sec_005fauthentication_005f1_reused = false;
    try {
      _jspx_th_sec_005fauthentication_005f1.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthentication_005f1.setParent(null);
      // /WEB-INF/views/boardReal/boardQuestion/boardQuestionDetail.jsp(251,48) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthentication_005f1.setProperty("principal.member.memberNickname");
      int _jspx_eval_sec_005fauthentication_005f1 = _jspx_th_sec_005fauthentication_005f1.doStartTag();
      if (_jspx_th_sec_005fauthentication_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fproperty_005fnobody.reuse(_jspx_th_sec_005fauthentication_005f1);
      _jspx_th_sec_005fauthentication_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthentication_005f1, _jsp_getInstanceManager(), _jspx_th_sec_005fauthentication_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthentication_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authentication
    org.springframework.security.taglibs.authz.AuthenticationTag _jspx_th_sec_005fauthentication_005f2 = (org.springframework.security.taglibs.authz.AuthenticationTag) _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fproperty_005fnobody.get(org.springframework.security.taglibs.authz.AuthenticationTag.class);
    boolean _jspx_th_sec_005fauthentication_005f2_reused = false;
    try {
      _jspx_th_sec_005fauthentication_005f2.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthentication_005f2.setParent(null);
      // /WEB-INF/views/boardReal/boardQuestion/boardQuestionDetail.jsp(252,44) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthentication_005f2.setProperty("principal.member.memberId");
      int _jspx_eval_sec_005fauthentication_005f2 = _jspx_th_sec_005fauthentication_005f2.doStartTag();
      if (_jspx_th_sec_005fauthentication_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fproperty_005fnobody.reuse(_jspx_th_sec_005fauthentication_005f2);
      _jspx_th_sec_005fauthentication_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthentication_005f2, _jsp_getInstanceManager(), _jspx_th_sec_005fauthentication_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f0_reused = false;
    try {
      _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f0.setParent(null);
      // /WEB-INF/views/boardReal/boardQuestion/boardQuestionDetail.jsp(278,19) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardQuestionVO.boardQuestionId}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
      if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      _jspx_th_c_005fout_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f1 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f1_reused = false;
    try {
      _jspx_th_c_005fout_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f1.setParent(null);
      // /WEB-INF/views/boardReal/boardQuestion/boardQuestionDetail.jsp(289,20) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f1.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardQuestionVO.boardQuestionId}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fout_005f1 = _jspx_th_c_005fout_005f1.doStartTag();
      if (_jspx_th_c_005fout_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f1);
      _jspx_th_c_005fout_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f1_reused);
    }
    return false;
  }
}
