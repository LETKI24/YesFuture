/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.46
 * Generated at: 2025-01-22 07:47:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.boardReal;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class boardMain_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/C:/Users/sdedu/Desktop/SPRING_CODES/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/KMS_PROJECT_YESFUTURE/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/C:/Users/sdedu/Desktop/SPRING_CODES/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/KMS_PROJECT_YESFUTURE/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1733282290650L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvar_005fvalue_005fpattern_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvar_005fvalue_005fpattern_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvar_005fvalue_005fpattern_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<!-- jquery 라이브러리 import -->\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.7.1.js\">\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("    <style type=\"text/css\">\r\n");
      out.write("    \r\n");
      out.write("    	/* 경계선 스타일 */\r\n");
      out.write("        .divider {\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-top: 1px solid #000; /* 얇은 검은색 선 */\r\n");
      out.write("            margin: 0;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        /* 메뉴바 스타일 */\r\n");
      out.write("        .menu-bar {\r\n");
      out.write("            display: flex; /* Flexbox 적용 */\r\n");
      out.write("            justify-content: flex-start; /* 왼쪽부터 가로로 배치 */\r\n");
      out.write("            align-items: center; /* 세로 중앙 정렬 */\r\n");
      out.write("            padding: 10px 20px; /* 메뉴바 안쪽 여백 */\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        /* 좌측 버튼 스타일 */\r\n");
      out.write("		.group1 {\r\n");
      out.write("		    display: flex;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		/* 우측 버튼 그룹 스타일 */\r\n");
      out.write("		.group2 {\r\n");
      out.write("		    display: flex;\r\n");
      out.write("		    margin-left: auto; /* 우측으로 밀어붙임 */\r\n");
      out.write("		}\r\n");
      out.write("	    \r\n");
      out.write("        /* 버튼 사이의 간격 설정 */\r\n");
      out.write("        .menu-bar a {\r\n");
      out.write("            margin-right: 20px; /* 각 버튼 사이의 간격 (원하는 값으로 조정 가능) */\r\n");
      out.write("            text-decoration: none; /* 링크 밑줄 제거 */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* 버튼 스타일 (옵션) */\r\n");
      out.write("        input[type=\"button\"] {\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            padding: 10px 20px;\r\n");
      out.write("            background-color: #4CAF50;\r\n");
      out.write("            color: white;\r\n");
      out.write("            border: none;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        /* 특정 value (닉네임 버튼)에 스타일 적용 */\r\n");
      out.write("    	input[type=\"button\"][value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.memberNickname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"] {\r\n");
      out.write("        background-color: transparent; /* 배경을 투명하게 설정 */\r\n");
      out.write("        color: #4CAF50; /* 글자 색상 설정 */\r\n");
      out.write("        border: 1px solid #4CAF50; /* 선택사항: 테두리 추가 */\r\n");
      out.write("    	}\r\n");
      out.write("\r\n");
      out.write("        /* 버튼에 마우스를 올렸을 때 스타일 (옵션) */\r\n");
      out.write("        input[type=\"button\"]:hover {\r\n");
      out.write("            background-color: #45a049;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        /* 전체 레이아웃 */\r\n");
      out.write("        .container {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            height: 80vh; /* 화면 높이의 80%를 사용 */\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* 왼쪽 메뉴 영역 */\r\n");
      out.write("        .left-menu {\r\n");
      out.write("            flex: 1; /* 1:4 비율 중 1 */\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex-direction: column;\r\n");
      out.write("            align-items: center; /* 버튼을 중앙 정렬 */\r\n");
      out.write("            border-right: 1px solid black; /* 세로 구분선 */\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* 버튼 스타일 */\r\n");
      out.write("        .left-menu button {\r\n");
      out.write("            width: 100px;\r\n");
      out.write("            margin: 10px 0;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            border: none;\r\n");
      out.write("            background-color: #4CAF50;\r\n");
      out.write("            color: white;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            transition: background-color 0.3s;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .left-menu button:hover {\r\n");
      out.write("            background-color: #45a049;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* 오른쪽 게시판 출력 영역 */\r\n");
      out.write("        .right-board {\r\n");
      out.write("            flex: 4; /* 1:4 비율 중 4 */\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            overflow-y: auto; /* 내용이 넘칠 경우 스크롤 */\r\n");
      out.write("            background-color: #f9f9f9;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* 게시판 제목 스타일 */\r\n");
      out.write("        .board-title {\r\n");
      out.write("            font-size: 24px;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            border-bottom: 2px solid #000;\r\n");
      out.write("            padding-bottom: 10px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        table, th, td {\r\n");
      out.write("			border-style: solid;\r\n");
      out.write("			border-width: 1px;\r\n");
      out.write("			text-align: center;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		ul {\r\n");
      out.write("			list-style-type: none;\r\n");
      out.write("			text-align: center;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		li {\r\n");
      out.write("			display: inline-block;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("    </style>\r\n");
      out.write("\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<h1>게시판</h1>\r\n");
      out.write("	\r\n");
      out.write("	<div class=\"menu-bar\">\r\n");
      out.write("        <!-- 이 위치에 main으로 가는 버튼 만들기 -->\r\n");
      out.write("        <a href=\"../problem/problemMain\" class=\"group1\"><input type=\"button\" value=\"문제은행 가기\"></a>\r\n");
      out.write("        <a href=\"boardMain\" class=\"group1\"><input type=\"button\" value=\"게시판\"></a>\r\n");
      out.write("	\r\n");
      out.write("		<div class=\"group2\">\r\n");
      out.write("			");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("			\r\n");
      out.write("			");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<!-- 가로 경계선 -->\r\n");
      out.write("    <hr class=\"divider\">\r\n");
      out.write("	\r\n");
      out.write("	<!-- 메인 레이아웃 -->\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <!-- 왼쪽 메뉴 영역 -->\r\n");
      out.write("        <div class=\"left-menu\">\r\n");
      out.write("            <button id=\"question\">질문</button>\r\n");
      out.write("            <button id=\"free\">자유</button>\r\n");
      out.write("            <button id=\"propose\">건의</button>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- 오른쪽 게시판 영역 -->\r\n");
      out.write("        <div class=\"right-board\" id=\"boardQuestionArea\">\r\n");
      out.write("        	<!-- 게시판 제목 -->\r\n");
      out.write("    		<div style=\"display: flex; align-items: center;\">\r\n");
      out.write("				<h2 style=\"margin-bottom: 10; margin-right: 20px;\">질문게시판</h2>\r\n");
      out.write("				<a href=\"boardQuestion/boardQuestion\"><input type=\"button\" value=\"더보기\"></a>\r\n");
      out.write("			</div>\r\n");
      out.write("    		\r\n");
      out.write("        	<table>\r\n");
      out.write("				<thead>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th style=\"width: 60px\">번호</th>\r\n");
      out.write("						<th style=\"width: 700px\">제목</th>\r\n");
      out.write("						<th style=\"width: 120px\">작성자</th>\r\n");
      out.write("						<th style=\"width: 100px\">작성일</th>\r\n");
      out.write("						<th style=\"width: 100px\">댓글</th>\r\n");
      out.write("						<th style=\"width: 100px\">조회</th>\r\n");
      out.write("					</tr>\r\n");
      out.write("				</thead>\r\n");
      out.write("				<tbody>\r\n");
      out.write("					");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("				</tbody>\r\n");
      out.write("			</table>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("        	\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("    $(document).ready(function() {\r\n");
      out.write("    	\r\n");
      out.write("    	// 질문 버튼 클릭 이벤트\r\n");
      out.write("    	$(\"#question\").click(function() {\r\n");
      out.write("            loadBoardQuestion();\r\n");
      out.write("        });\r\n");
      out.write("    	\r\n");
      out.write("        // 자유 버튼 클릭 이벤트\r\n");
      out.write("        $(\"#free\").click(function() {\r\n");
      out.write("            loadBoardFree();\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // 건의 버튼 클릭 이벤트\r\n");
      out.write("        $(\"#propose\").click(function() {\r\n");
      out.write("            loadBoardPropose();\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        // 비동기 데이터 로드 함수\r\n");
      out.write("        function loadBoardPropose() {\r\n");
      out.write("        	var tableProposeHTML = ''; // 각 테이블 데이터를 HTML에 표현할 문자열 변수\r\n");
      out.write("        	\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url: \"../boardReal/proposeMinimal\",        // 서버 요청 URL\r\n");
      out.write("                type: \"GET\",       // 요청 방식\r\n");
      out.write("                dataType: \"json\",  // 응답 데이터 타입\r\n");
      out.write("                success: function(result) {\r\n");
      out.write("                    tableProposeHTML += '<div style=\"display: flex; align-items: center;\">' \r\n");
      out.write("                    	+ '<h2 style=\"margin-bottom: 15; margin-right: 20px;\">건의게시판</h2>'\r\n");
      out.write("                    	+ '<a href=\"/boardPropose/boardPropose\"><input type=\"button\" value=\"더보기\"></a>'\r\n");
      out.write("                    	+ '</div>'\r\n");
      out.write("                    	+ '<table>'\r\n");
      out.write("                        + '<thead>'\r\n");
      out.write("                        + '<tr>'\r\n");
      out.write("                        + '<th>번호</th>'\r\n");
      out.write("                        + '<th>제목</th>'\r\n");
      out.write("                        + '<th>작성자</th>'\r\n");
      out.write("                        + '<th>작성일</th>'\r\n");
      out.write("                        + '<th>댓글</th>'\r\n");
      out.write("                        + '<th>조회</th>'\r\n");
      out.write("                        + '</tr>'\r\n");
      out.write("                        + '</thead>'\r\n");
      out.write("                        + '<tbody>';\r\n");
      out.write("\r\n");
      out.write("                    // 데이터 반복\r\n");
      out.write("                    $.each(result, function(index, item) {\r\n");
      out.write("\r\n");
      out.write("                    	// 전송된 DateCreated는 문자열 형태이므로 날짜 형태로 변환이 필요\r\n");
      out.write("                    	var boardProposeDateCreated = new Date(item.boardProposeDateCreated);\r\n");
      out.write("                    	\r\n");
      out.write("                        tableProposeHTML += '<tr>'\r\n");
      out.write("                                + '<td>' + item.boardProposeId + '</td>'\r\n");
      out.write("                                + '<td><a href=\"boardProposeDetail?boardProposeId=' + item.boardProposeId + '\">'\r\n");
      out.write("                                + item.boardProposeTitle + '</a></td>'\r\n");
      out.write("                                + '<td>' + item.memberNickname + '</td>'\r\n");
      out.write("                                + '<td>' + boardProposeDateCreated + '</td>'\r\n");
      out.write("                                + '<td>' + item.boardProposeReplyCount + '</td>'\r\n");
      out.write("                                + '<td>' + item.boardProposeHitCount + '</td>'\r\n");
      out.write("                                + '</tr>';\r\n");
      out.write("                    });\r\n");
      out.write("\r\n");
      out.write("                    tableProposeHTML += '</tbody>'\r\n");
      out.write("                    			+ '</table>';\r\n");
      out.write("\r\n");
      out.write("                    // 기존 테이블 영역을 교체\r\n");
      out.write("                    $(\"#boardQuestionArea\").html(tableProposeHTML);\r\n");
      out.write("                }, // end function(result)\r\n");
      out.write("                error: function() {\r\n");
      out.write("                    alert(\"데이터를 불러오는 데 실패했습니다.\");\r\n");
      out.write("                }\r\n");
      out.write("            }); // end ajax\r\n");
      out.write("        } // end loadBoardPropose()\r\n");
      out.write("        \r\n");
      out.write("                \r\n");
      out.write("     	// 비동기 데이터 로드 함수\r\n");
      out.write("        function loadBoardQuestion() {\r\n");
      out.write("        	var tableQuestionHTML = ''; // 각 테이블 데이터를 HTML에 표현할 문자열 변수\r\n");
      out.write("        	\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url: \"../boardReal/questionMinimal\",        // 서버 요청 URL\r\n");
      out.write("                type: \"GET\",       // 요청 방식\r\n");
      out.write("                dataType: \"json\",  // 응답 데이터 타입\r\n");
      out.write("                success: function(result) {\r\n");
      out.write("                    tableQuestionHTML += '<div style=\"display: flex; align-items: center;\">' \r\n");
      out.write("                    	+ '<h2 style=\"margin-bottom: 15; margin-right: 20px;\">질문게시판</h2>'\r\n");
      out.write("                    	+ '<a href=\"boardQuestion/boardQuestion\"><input type=\"button\" value=\"더보기\"></a>'\r\n");
      out.write("                    	+ '</div>'\r\n");
      out.write("                    	+ '<table>'\r\n");
      out.write("                        + '<thead>'\r\n");
      out.write("                        + '<tr>'\r\n");
      out.write("                        + '<th>번호</th>'\r\n");
      out.write("                        + '<th>제목</th>'\r\n");
      out.write("                        + '<th>작성자</th>'\r\n");
      out.write("                        + '<th>작성일</th>'\r\n");
      out.write("                        + '<th>댓글</th>'\r\n");
      out.write("                        + '<th>조회</th>'\r\n");
      out.write("                        + '</tr>'\r\n");
      out.write("                        + '</thead>'\r\n");
      out.write("                        + '<tbody>';\r\n");
      out.write("\r\n");
      out.write("                    // 데이터 반복\r\n");
      out.write("                    $.each(result, function(index, item) {\r\n");
      out.write("\r\n");
      out.write("                    	// 전송된 DateCreated는 문자열 형태이므로 날짜 형태로 변환이 필요\r\n");
      out.write("                    	var boardQuestionDateCreated = new Date(item.boardQuestionDateCreated);\r\n");
      out.write("                    	\r\n");
      out.write("                        tableQuestionHTML += '<tr>'\r\n");
      out.write("                                + '<td>' + item.boardQuestionId + '</td>'\r\n");
      out.write("                                + '<td><a href=\"boardQuestion/boardQuestionDetail?boardQuestionId=' + item.boardQuestionId + '\">'\r\n");
      out.write("                                + item.boardQuestionTitle + '</a></td>'\r\n");
      out.write("                                + '<td>' + item.memberNickname + '</td>'\r\n");
      out.write("                                + '<td>' + boardQuestionDateCreated + '</td>'\r\n");
      out.write("                                + '<td>' + item.boardQuestionReplyCount + '</td>'\r\n");
      out.write("                                + '<td>' + item.boardQuestionHitCount + '</td>'\r\n");
      out.write("                                + '</tr>';\r\n");
      out.write("                    });\r\n");
      out.write("\r\n");
      out.write("                    tableQuestionHTML += '</tbody>'\r\n");
      out.write("                    			+ '</table>';\r\n");
      out.write("\r\n");
      out.write("                    // 기존 테이블 영역을 교체\r\n");
      out.write("                    $(\"#boardQuestionArea\").html(tableQuestionHTML);\r\n");
      out.write("                }, // end function(result)\r\n");
      out.write("                error: function() {\r\n");
      out.write("                    alert(\"데이터를 불러오는 데 실패했습니다.\");\r\n");
      out.write("                }\r\n");
      out.write("            }); // end ajax\r\n");
      out.write("        } // end loadBoardQuestion()\r\n");
      out.write("        \r\n");
      out.write("     	// 비동기 데이터 로드 함수\r\n");
      out.write("        function loadBoardFree() {\r\n");
      out.write("        	var tableFreeHTML = ''; // 각 테이블 데이터를 HTML에 표현할 문자열 변수\r\n");
      out.write("        	\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url: \"../boardReal/freeMinimal\",        // 서버 요청 URL\r\n");
      out.write("                type: \"GET\",       // 요청 방식\r\n");
      out.write("                dataType: \"json\",  // 응답 데이터 타입\r\n");
      out.write("                success: function(result) {\r\n");
      out.write("                    tableFreeHTML += '<div style=\"display: flex; align-items: center;\">' \r\n");
      out.write("                    	+ '<h2 style=\"margin-bottom: 15; margin-right: 20px;\">자유게시판</h2>'\r\n");
      out.write("                    	+ '<a href=\"/boardFree/boardFree\"><input type=\"button\" value=\"더보기\"></a>'\r\n");
      out.write("                    	+ '</div>'\r\n");
      out.write("                    	+ '<table>'\r\n");
      out.write("                        + '<thead>'\r\n");
      out.write("                        + '<tr>'\r\n");
      out.write("                        + '<th>번호</th>'\r\n");
      out.write("                        + '<th>제목</th>'\r\n");
      out.write("                        + '<th>작성자</th>'\r\n");
      out.write("                        + '<th>작성일</th>'\r\n");
      out.write("                        + '<th>댓글</th>'\r\n");
      out.write("                        + '<th>조회</th>'\r\n");
      out.write("                        + '<th>좋아요</th>'\r\n");
      out.write("                        + '</tr>'\r\n");
      out.write("                        + '</thead>'\r\n");
      out.write("                        + '<tbody>';\r\n");
      out.write("\r\n");
      out.write("                    // 데이터 반복\r\n");
      out.write("                    $.each(result, function(index, item) {\r\n");
      out.write("\r\n");
      out.write("                    	// 전송된 DateCreated는 문자열 형태이므로 날짜 형태로 변환이 필요\r\n");
      out.write("                    	var boardFreeDateCreated = new Date(item.boardFreeDateCreated);\r\n");
      out.write("                    	\r\n");
      out.write("                        tableFreeHTML += '<tr>'\r\n");
      out.write("                                + '<td>' + item.boardFreeId + '</td>'\r\n");
      out.write("                                + '<td><a href=\"boardFreeDetail?boardFreeId=' + item.boardFreeId + '\">'\r\n");
      out.write("                                + item.boardFreeTitle + '</a></td>'\r\n");
      out.write("                                + '<td>' + item.memberNickname + '</td>'\r\n");
      out.write("                                + '<td>' + boardFreeDateCreated + '</td>'\r\n");
      out.write("                                + '<td>' + item.boardFreeReplyCount + '</td>'\r\n");
      out.write("                                + '<td>' + item.boardFreeHitCount + '</td>'\r\n");
      out.write("                                + '<td>' + item.boardFreeLikeCount + '</td>'\r\n");
      out.write("                                + '</tr>';\r\n");
      out.write("                    });\r\n");
      out.write("\r\n");
      out.write("                    tableFreeHTML += '</tbody>'\r\n");
      out.write("                    			+ '</table>';\r\n");
      out.write("\r\n");
      out.write("                    // 기존 테이블 영역을 교체\r\n");
      out.write("                    $(\"#boardQuestionArea\").html(tableFreeHTML);\r\n");
      out.write("                }, // end function(result)\r\n");
      out.write("                error: function() {\r\n");
      out.write("                    alert(\"데이터를 불러오는 데 실패했습니다.\");\r\n");
      out.write("                }\r\n");
      out.write("            }); // end ajax\r\n");
      out.write("        } // end loadBoardFree()\r\n");
      out.write("        \r\n");
      out.write("    }); // end document  \r\n");
      out.write("    </script>\r\n");
      out.write("	    \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/boardReal/boardMain.jsp(148,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty sessionScope.memberEmail }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			<!-- 회원 가입 버튼 -->\r\n");
          out.write("		    <a href=\"agree\"><input type=\"button\" value=\"회원 가입\"></a>\r\n");
          out.write("		    <!-- 로그인 버튼 -->\r\n");
          out.write("		    <a href=\"login\"><input type=\"button\" value=\"로그인\"></a>\r\n");
          out.write("			");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/boardReal/boardMain.jsp(155,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty sessionScope.memberEmail }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			<a href=\"mypage\"><input type=\"button\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.memberNickname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"></a>\r\n");
          out.write("			<a href=\"../board/logout\"><input type=\"button\" value=\"로그아웃\"></a>\r\n");
          out.write("			");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/boardReal/boardMain.jsp(194,5) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("BoardQuestionVO");
      // /WEB-INF/views/boardReal/boardMain.jsp(194,5) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/boardReal/boardMain.jsp(194,5) '${boardQuestionListMinimal }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${boardQuestionListMinimal }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("						<tr>\r\n");
            out.write("							<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${BoardQuestionVO.boardQuestionId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("							<td><a href=\"boardQuestion/boardQuestionDetail?boardQuestionId=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${BoardQuestionVO.boardQuestionId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("							");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${BoardQuestionVO.boardQuestionTitle }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</a></td>\r\n");
            out.write("							<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${BoardQuestionVO.memberNickname }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("							<!-- boardDateCreated 데이터 포멧 변경, 원하는 형태로 데이터를 바꿀 수 있다. -->\r\n");
            out.write("							");
            if (_jspx_meth_fmt_005fformatDate_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\r\n");
            out.write("							<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardQuestionDateCreated }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("							<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${BoardQuestionVO.boardQuestionReplyCount }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("							<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${BoardQuestionVO.boardQuestionHitCount }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("						</tr>\r\n");
            out.write("					");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fformatDate_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:formatDate
    org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag _jspx_th_fmt_005fformatDate_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag) _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvar_005fvalue_005fpattern_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag.class);
    boolean _jspx_th_fmt_005fformatDate_005f0_reused = false;
    try {
      _jspx_th_fmt_005fformatDate_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fformatDate_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /WEB-INF/views/boardReal/boardMain.jsp(201,7) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f0.setValue((java.util.Date) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${BoardQuestionVO.boardQuestionDateCreated }", java.util.Date.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /WEB-INF/views/boardReal/boardMain.jsp(201,7) name = pattern type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f0.setPattern("yyyy-MM-dd HH:mm:ss");
      // /WEB-INF/views/boardReal/boardMain.jsp(201,7) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f0.setVar("boardQuestionDateCreated");
      int _jspx_eval_fmt_005fformatDate_005f0 = _jspx_th_fmt_005fformatDate_005f0.doStartTag();
      if (_jspx_th_fmt_005fformatDate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvar_005fvalue_005fpattern_005fnobody.reuse(_jspx_th_fmt_005fformatDate_005f0);
      _jspx_th_fmt_005fformatDate_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fformatDate_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fformatDate_005f0_reused);
    }
    return false;
  }
}
